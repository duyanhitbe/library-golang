// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/auth/user/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth API"
                ],
                "summary": "Login User",
                "parameters": [
                    {
                        "description": "Login user request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.LoginUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apis.LoginUserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            }
        },
        "/v1/book": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book API"
                ],
                "summary": "Get a list of books",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/apis.BookResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book API"
                ],
                "summary": "Create one book",
                "parameters": [
                    {
                        "description": "Create book request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.CreateBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apis.BookResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            }
        },
        "/v1/book/borrow": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book API"
                ],
                "summary": "Borrow a book",
                "parameters": [
                    {
                        "description": "Borrow book request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.BorrowBookRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apis.BorrowBookResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            }
        },
        "/v1/book/borrow/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book API"
                ],
                "summary": "Get list of books by borrowId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "borrower id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apis.BookResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            }
        },
        "/v1/book/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book API"
                ],
                "summary": "Get one book by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apis.BookResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book API"
                ],
                "summary": "Delete one book by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apis.BookResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Book API"
                ],
                "summary": "Update one book by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update book request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.UpdateOneBookByIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apis.BookResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            }
        },
        "/v1/borrower/book/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Borrower API"
                ],
                "summary": "Get list of borrowers by bookId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "book id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.Borrower"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            }
        },
        "/v1/category": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category API"
                ],
                "summary": "Get a list of categories",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/db.Category"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category API"
                ],
                "summary": "Create one category",
                "parameters": [
                    {
                        "description": "Create category request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.CreateCategoryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.Category"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            }
        },
        "/v1/category/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category API"
                ],
                "summary": "Get one category by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.Category"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category API"
                ],
                "summary": "Delete one category by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.Category"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Category API"
                ],
                "summary": "Update one category by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "category id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update category request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.UpdateOneCategoryByIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/db.Category"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            }
        },
        "/v1/user": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Get a list of users",
                "parameters": [
                    {
                        "type": "integer",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.PaginationResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/apis.UserResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Create one user",
                "parameters": [
                    {
                        "description": "Create user request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apis.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            }
        },
        "/v1/user/{id}": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Get one user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apis.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Delete one user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apis.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User API"
                ],
                "summary": "Update one user by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update user request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/apis.UpdateOneUserByIdRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/apis.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apis.UserResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "client error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    },
                    "500": {
                        "description": "database error",
                        "schema": {
                            "$ref": "#/definitions/apis.ExceptionResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apis.BookResponse": {
            "type": "object",
            "properties": {
                "book": {
                    "$ref": "#/definitions/db.Book"
                },
                "book_info": {
                    "$ref": "#/definitions/db.BookInfo"
                },
                "category": {
                    "$ref": "#/definitions/db.Category"
                }
            }
        },
        "apis.BorrowBookRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "book_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                }
            }
        },
        "apis.BorrowBookResponse": {
            "type": "object",
            "properties": {
                "book": {
                    "$ref": "#/definitions/db.Book"
                },
                "book_info": {
                    "$ref": "#/definitions/db.BookInfo"
                },
                "borrower": {
                    "$ref": "#/definitions/db.Borrower"
                },
                "category": {
                    "$ref": "#/definitions/db.Category"
                }
            }
        },
        "apis.CreateBookRequest": {
            "type": "object",
            "required": [
                "author",
                "category_id",
                "name",
                "publication_date"
            ],
            "properties": {
                "author": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "publication_date": {
                    "type": "string"
                }
            }
        },
        "apis.CreateCategoryRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.CreateUserRequest": {
            "type": "object",
            "required": [
                "password",
                "role",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "apis.ExceptionResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/validations.ValidationError"
                    }
                },
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "apis.LoginUserRequest": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "apis.LoginUserResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "access_token_exp": {
                    "type": "string"
                },
                "access_token_iat": {
                    "type": "string"
                }
            }
        },
        "apis.PaginatedResponse": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "apis.PaginationResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "pagination": {
                    "$ref": "#/definitions/apis.PaginatedResponse"
                },
                "status_code": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "apis.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status_code": {
                    "type": "integer"
                },
                "success": {
                    "type": "boolean"
                }
            }
        },
        "apis.UpdateOneBookByIdRequest": {
            "type": "object",
            "required": [
                "author",
                "category_id",
                "name",
                "publication_date"
            ],
            "properties": {
                "author": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "publication_date": {
                    "type": "string"
                }
            }
        },
        "apis.UpdateOneCategoryByIdRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "apis.UpdateOneUserByIdRequest": {
            "type": "object",
            "required": [
                "role",
                "username"
            ],
            "properties": {
                "role": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "apis.UserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "role": {
                    "$ref": "#/definitions/db.RoleEnum"
                },
                "updated_at": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "db.Book": {
            "type": "object",
            "properties": {
                "book_info_id": {
                    "type": "string"
                },
                "category_id": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.BookInfo": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "publication_date": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.Borrower": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.Category": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "deleted_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "is_active": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "db.RoleEnum": {
            "type": "string",
            "enum": [
                "ADMIN",
                "MANAGER"
            ],
            "x-enum-varnames": [
                "RoleEnumADMIN",
                "RoleEnumMANAGER"
            ]
        },
        "validations.ValidationError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                },
                "field": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Library App",
	Description:      "Library App using Golang",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
